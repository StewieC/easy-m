"""
Django settings for easyM project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

import logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)
logger.debug("MpesaConfig loaded: %s", locals().get('MpesaConfig', 'Not found'))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-y4&!3#x7x3&h1jhdjij_-%42bhrh^l5&+_65pg7jt9)jdnr8##'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '2236-129-222-187-71.ngrok-free.app']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'contributions',
    'accounts',
    'password_reset',  # New app for password reset functionality
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'easyM.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'easyM.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'contributions' /"static"]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# easy_m/settings.py
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Default backend
    'accounts.backends.EmailBackend',  # Custom backend for email login
]

# Email Configuration (Console Backend for Development)
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Default Email Settings
EMAIL_FROM = 'noreply@hostelnest.com'  # The "from" email address (can be customized)

# Site URL (used for password reset links)
SITE_URL = 'http://127.0.0.1:8000'  # Update this for production (e.g., 'https://yourdomain.com')

# CELERY_BROKER_URL = 'redis://localhost:6379/0'  # Redis running locally
# CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'  # Store task results
# CELERY_BEAT_SCHEDULE = {
#     'check-group-cycles': {
#         'task': 'contributions.tasks.check_group_cycles',
#         'schedule': crontab(minute='*/5'),  # Every 5 minutes
#     },
# }

import logging
from decouple import config
from django.conf import settings

# Set up logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

# Debug before loading
logger.debug("Starting settings.py")

try:
    MpesaConfig = {
        'CONSUMER_KEY': config('MPESA_CONSUMER_KEY'),
        'CONSUMER_SECRET': config('MPESA_CONSUMER_SECRET'),
        'PASSKEY': config('MPESA_PASSKEY'),
        'SHORTCODE': config('MPESA_SHORTCODE'),
        'CALLBACK_URL': config('MPESA_CALLBACK_URL'),
        'AUTH_URL': config('MPESA_AUTH_URL'),
        'STK_PUSH_URL': config('MPESA_STK_PUSH_URL'),
    }
    logger.debug("MpesaConfig loaded: %s", MpesaConfig)

    # Attach MpesaConfig to settings
    settings.MpesaConfig = MpesaConfig

except Exception as e:
    logger.error("Error loading MpesaConfig: %s", str(e))
    raise

# Other Django settings
DEBUG = True
ALLOWED_HOSTS = ['localhost', '127.0.0.1', '2236-129-222-187-71.ngrok-free.app']
# ... (rest of your settings)